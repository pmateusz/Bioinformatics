package com.github.pmateusz.bioinformatics.comparing;

import org.junit.Assert;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import java.io.IOException;

public class ComparingTest {

    private static final int INDEL_PENALTY = 5;

    @DataProvider(name = "longestCommonSequenceBackTrackTest")
    public Object[][] dataProvider() {
        return new Object[][]{
                {"PLEASANTLY", "MEANLY", "PLEASANTLY", "-ME--AN-LY", 8},
                {"ILYPRQSMICMSFCFWDMWKKDVPVVLMMFLERRQMQSVFSWLVTVKTDCGKGIYNHRKYLGLPTMTAGDWHWIKKQNDPHEWFQGRLETAWLHSTFLYWKYFECDAVKVCMDTFGLFGHCDWDQQIHTCTHENEPAIAFLDLYCRHSPMCDKLYPVWDMACQTCHFHHSWFCRNQEMWMKGDVDDWQWGYHYHTINSAQCNQWFKEICKDMGWDSVFPPRHNCQRHKKCMPALYAGIWMATDHACTFMVRLIYTENIAEWHQVYCYRSMNMFTCGNVCLRCKSWIFVKNYMMAPVVNDPMIEAFYKRCCILGKAWYDMWGICPVERKSHWEIYAKDLLSFESCCSQKKQNCYTDNWGLEYRLFFQSIQMNTDPHYCQTHVCWISAMFPIYSPFYTSGPKEFYMWLQARIDQNMHGHANHYVTSGNWDSVYTPEKRAGVFPVVVPVWYPPQMCNDYIKLTYECERFHVEGTFGCNRWDLGCRRYIIFQCPYCDTMKICYVDQWRSIKEGQFRMSGYPNHGYWFVHDDHTNEWCNQPVLAKFVRSKIVAICKKSQTVFHYAYTPGYNATWPQTNVCERMYGPHDNLLNNQQNVTFWWKMVPNCGMQILISCHNKMKWPTSHYVFMRLKCMHVLMQMEYLDHFTGPGEGDFCRNMQPYMHQDLHWEGSMRAILEYQAEHHRRAFRAELCAQYDQEIILWSGGWGVQDCGFHANYDGSLQVVSGEPCSMWCTTVMQYYADCWEKCMFA",
                        "ILIPRQQMGCFPFPWHFDFCFWSAHHSLVVPLNPQMQTVFQNRGLDRVTVKTDCHDHRWKWIYNLGLPTMTAGDWHFIKKHVVRANNPHQWFQGRLTTAWLHSTFLYKKTEYCLVRHSNCCHCDWDQIIHTCAFIAFLDLYQRHWPMCDKLYCHFHHSWFCRNQEMSMDWNQWFPWDSVPRANCLEEGALIALYAGIWANSMKRDMKTDHACTVRLIYVCELHAWLKYCYTSINMLCGNVCLRCKSWIFVKLFYMYAPVVNTIEANSPHYYKRCCILGQGICPVERKSHCEIYAKDLLSFESCCSQKQNCYTDNWGLEYRLFFQHIQMECTDPHANRGWTSCQTAKYWHFNLDDRPPKEFYMWLQATPTDLCMYQHCLMFKIVKQNFRKQHGHANPAASTSGNWDSVYTPEKMAYKDWYVSHPPVDMRRNGSKMVPVWYPPGIWHWKQSYKLTYECFFTVPGRFHVEGTFGCNRWDHQPGTRRDRQANHQFQCPYSDTMAIWEHAYTYVDQWRSIKEGQMPMSGYPNHGQWNVHDDHTNEQERSPICNQPVLAKFVRSKNVSNHEICKKSQTVFHWACEAQTNVCERMLNNQHVAVKRNVTFWWQMVPNCLWSCHNKMTWPTRPEQHRLFFVKMRLKCMHEYLDVAPSDFCRNMQAYMHSMRAILEYQADFDLKRRLRAIAPMDLCAQYDQEIILWSGGYIYDQSLQVVSCEGCSYYADCYVKCINVKEKCMFA",
                        "ILYPRQSMICMSFCF-WD--MWKKDVPVVLMMFLERRQMQSVF-S-WL--VTVKTDCGKGIYNHR-K--Y-LGLPTMTAGDWHWIKK---Q-NDPHEWFQGRLETAWLHSTFLYWKYFE-CDAVKVCMDTFGLFGHCDWDQQIHTCTHENEPAIAFLDLYCRHSPMCDKLYPVWDMACQTCHFHHSWFCRNQEMWMKGDVDDWQWGYHYHTINSAQCNQWFKEICKDMGWDSVFPPRHNCQRHKKCMPALYAGIW-------MATDHACTFMVRLIYTENIAEWHQVYCYRSMNMFTCGNVCLRCKSWIFVK-NYMMAPVVN--DPMIEAFYKRCCILGKAWYDMWGICPVERKSHWEIYAKDLLSFESCCSQKKQNCYTDNWGLEYRLFFQSIQMN-TDPH----Y--CQTHVCW-ISA-MFPIYSPFY--TSG-PKE--FYM-WLQARI-DQN---MHGHANHYV-TSGNWDSVYTPEKRA--G--V-F-PV--------VVPVWYPPQMCN--DYIKLTYEC----E-RFHVEGTFGCNRWD-L-GC-R-RYI--IFQCPYCDTMKI---C--YVDQWRSIKEGQFRMSGYPNHGYWFVHDDHTNEW-----CNQPVLAKFVRSKIVA---ICKKSQTVFHYAYTPGYNATWPQTNVCERMYGPHDNLLNNQQNVTFWWKMVPNCGMQILISCHNKMKWPT---SHYV-F--MRLKCMHVLMQMEYLDHFTGPGEGDFCRNMQPYMHQDLHWEGSMRAILEYQAEHH-RRAFR--A--ELCAQYDQEIILWSGGWGVQDCGFHANYDGSLQVVSGEPCSMWCTTVMQYYADCWEKCMFA",
                        "ILIPRQQMGCFPFPWHFDFCFWSAHHSLV-VP-L-NPQMQTVFQNRGLDRVTVKTDC----HDHRWKWIYNLGLPTMTAGDWHFIKKHVVRANNPHQWFQGRLTTAWLHSTFLY-KKTEYC-LVR---HS-NCC-HCDWDQIIHTCAF-----IAFLDLYQRHWPMCDKLY---------CHFHHSWFCRNQEMSM-----D--W------------NQWF-----P--WDSV--PRANC-LEEGALIALYAGIWANSMKRDMKTDHACT--VRLIYVCELHAWLK-YCYTSINML-CGNVCLRCKSWIFVKLFYMYAPVVNTIEANSPHYYKRCCILGQ------GICPVERKSHCEIYAKDLLSFESCCSQ-KQNCYTDNWGLEYRLFFQHIQMECTDPHANRGWTSCQTAKYWHFNLDDRP-PKEFYMWLQATPTDLCMYQHCLMFKIVKQNFRKQHGHANPAASTSGNWDSVYTPEKMAYKDWYVSHPPVDMRRNGSKMVPVWYPPGIWHWKQSYKLTYECFFTVPGRFHVEGTFGCNRWDHQPGTRRDRQANHQFQCPYSDTMAIWEHAYTYVDQWRSIKEGQMPMSGYPNHGQWNVHDDHTNEQERSPICNQPVLAKFVRSKNVSNHEICKKSQTVFHWA-C---EA---QTNVCERMLN-NQHVA-VKRNVTFWWQMVPNC----LWSCHNKMTWPTRPEQHRLFFVKMRLKCMH-----EYLD--VAP--SDFCRNMQAYM----H---SMRAILEYQADFDLKRRLRAIAPMDLCAQYDQEIILWSGGY-I--------YDQSLQVVSCEGCSYYADCYVK-CINVKEKCMFA",
                        1555}
        };
    }

    @Test
    public void longestLocalAlignmentTest() throws IOException {
        String left = "MEANLY";
        String right = "PENALTY";
        ScoringMatrix scoringMatrix = ScoringMatrix.load("com/github/pmateusz/bioinformatics/comparing/pam250.txt");

        LongestCommonSequenceBackTrack.Result result = LongestCommonSequenceBackTrack.compareLocal(left, right, scoringMatrix, 5);
        Assert.assertEquals(15, result.getScore());
        Assert.assertEquals("EANL-Y", result.getLeft());
        Assert.assertEquals("ENALTY", result.getRight());
    }

    @Test
    public void submissionLongestLocalAlignmentTest() throws IOException {
        String left = "SKWGNICNSVGGEHRKMQTHHRTKELQDPPWSKNQVFEYDNRSGYSTKNIKGQMKDRVHGCPIRFRLVIDMKKRIIFCNEIKIDCFNISWEDCTFSIPEMPYMSENRLAWWIGCMWTYTAWICHCALQNYSFVEPAHFTMNVTLWPLDTFTIDRGSRNAFVIKDKFCFNWLKYHGCLNQYEHCRCHMNVDCIPHIRLTYSHLKLGRNSHCEECYEMNLFERYNIYWIVCIAMHKFEPVGFRNVRLIPEPWIDIRGAWYRDFQEHKKKAVLIDKKDLIQEWFSRKWYPGDTSSPAQFLRFPVATNEWMYPSSPIGSYWIALVVRPHTYDGSMKGHEHIPSVLSRRMLSAWHNAYIVKCGGAYANEKAFCETAPELQEKNNWSPWRDSFYVADKINFADGFNGVYIDDNSTCTWSSFGFPSERVDRGNHQLTECRQLMDLTSLKLSHYSSTKFWLCMSSEMFVKDTIHDGRRNIKVSKGAEVVKLMWACQDSPRRSWHDFYYDNAVSCHWSRSFGMPYQVIGKYLASIKAFKITPMRKMHEWDNFRECFMDHCNYTCMCWNRRSNSIKQMQRVNTGVFWFITSKNQTGCQPAGSNTQYWMLHKFIHSMVTHWICGSQSYDISKGWVEFDEHQCEYRRWWIKGRRSPLQFRNWKPRCSSTYHLAWHCSTAYELVAWWRPAEHVGFGYGASSYVQGEVWMFGNGECKWKFSMGCDTQLDTHCDIFNQKIPNVNWMAHYVPERGGVQEVFYKMHQYNKDRLRMMRIGPVFSCSTEQDSPIRVLCSKITKPCHVKIIGANLTKRNTYNTLLMKQGLRPGNMAYNCCIRVCGCFSCDRYKELIARSHAWSMFNHYCDYKAGARYWDSNLNKTVNSHCYTESMWVQFHKHEAQIVPYTGWDNPYCYFC";
        String right = "ANTTDFYYICTPYFASAERIQEYFGKMATGTIPKIMEMQYKMMYMQCCEFNMCRANKKWRMPGHVIGVSLGLVPYQMTDHAEDCKDGEAYIEMRLTDSANLDWKRCTDMHDGLVDQQILNPWNYFIKIPFETGQVTKNLVWNAPAYFPVGFFSTVGVNHNNHLVLPYIWHFDQYINTTIANGYCAMIKFENSFPCINYPNDVEFTPISQGTFIIDVCYWPGRDCKNFWRCKIVSHARNDEERYNIYWIVCIAMHKFEPVANVDCETAHCLIPEPWIDIRGWYQEHVLIDKKDLIQPWYPGDTDSPAQFLRFPVATNIGPGFCYHSYWIALVHTYDGSAKSWVHSPQMLRNFHQVRNWHNAYAYANFPNKRSVKVFCETAPELQEKNNPTAWIKSDKINFADGFNGSYIDDNSTCTWSWFGFPSQWWREDNKKHQNAYDNTTECRQLMDLTSLKLSHYSSTKFWLCMSSSMFVKDTIHDGRRNIKVSKGAEVVKLMRACGEIIRKQGRVSNRRRSAVFCHWSRSEGLPGDLQAMPFVGRQVFGQVIGKYLASIKAFPRKEMPITPMRAMHEWDNFRECWMDHRLRRNYTVMCWNRRSNYIKQEQRVNTVLTFWFITSCSGSVGKAHMGSQSYFWVECHFDSVRHAQRDDYRGDIRHVMHVKGSTSKAATFQLLYLHWLLNNCWAYCIGNFPFVHFRPIMGRQYKGVSTASAVYIMKNFNLQHPKQVFVIEWVWKNHSQAARCHDLVYGVMQNYDFKKWCYYNSCHRSYIAYQSRRFMAPCVREKHICTVACGYQMGEGKDRRSFGRWEATHYIGEHRWFRKNTAYTSNKNHCVCYGAQYYTLYCECRRHLEMDVMLGIEAEYLRAIGSYHENTQIAIERDIKWNRAWELEVWDFRSYWRWMSCDPPFWGERLCYHHRHSSRTQDQHGEPVAVVNTEDW";
        ScoringMatrix scoringMatrix = ScoringMatrix.load("com/github/pmateusz/bioinformatics/comparing/pam250.txt");

        LongestCommonSequenceBackTrack.Result result = LongestCommonSequenceBackTrack.compareLocal(left, right, scoringMatrix, INDEL_PENALTY);

        System.out.println(result.getScore());
        System.out.println(result.getLeft());
        System.out.println(result.getRight());
    }

    @Test(dataProvider = "longestCommonSequenceBackTrackTest")
    public void longestCommonSequenceBackTrackTest(String left, String right, String expectedLeftAlignment, String expectedRightAlignment, int expectedScore) throws IOException {
        ScoringMatrix scoringMatrix = ScoringMatrix.load("com/github/pmateusz/bioinformatics/comparing/blosum62.txt");

        LongestCommonSequenceBackTrack.Result result = LongestCommonSequenceBackTrack.compare(left, right, scoringMatrix, INDEL_PENALTY);
        Assert.assertEquals(expectedScore, result.getScore());
        Assert.assertEquals(expectedLeftAlignment, result.getLeft());
        Assert.assertEquals(expectedRightAlignment, result.getRight());
    }

    @Test
    public void submissionLongestCommonSequenceBackTrackTest() throws IOException {
        String left = "CYISMPDSRYQCCQFSIDGKDVFVFGDHAHGNHWNFDEHKGENNNKQGTEHRIACPTRIISHDPPSEALACQWLPSMHIHCELPKRGKLARIIMRKEGAFNFHCWDHVASRRRKTWHRHEWDVKSNKLKDIMLHIRNGPNSQPDDHTHSTGAHGCAFPVKCLSWAWSGNNYQFFDDWMRLNNPHEWILLHYKLNELQQHKIWFLKDSHWMWTSRCHQGFIPNQLVIQFLTIKTCIWDNGELGDTCENQEDLTKLQQYMSPIHDPCNTSMTSVTQALPYFPNDSASTNREVIWRPRCKTTCTGFTVRHNWLVFEGPTVQHMVLDLCCTHPGSTHSRKKRVIAHIYVVKTYWGIDNQQLDFENVPPKWTLISIVKPKLKASQVHAYYMLIILKDWSKDGHRRGLQYEEQQSGNCLDLGYKMAIYHWPYMTLIQTYNYHHAQVIVRDKGRSSGKISCAWVKFWYEDEQFCFQGSVIPWNVYSLTPPSYCYWNIENNWMEESWLMWRSCQSGSKKHEESWQMVEPKEGYPVESPCTKCPVSEMTQPQGFCDRLFEIWAKSEWTHAKWSAFPCFSWHFWCSRFMAKMMREFFYGVIRINNAETCDNYSAYKWSFSEINRYMMPLVGHDELKGNNVYWGTGYMFLCNLTEKTYIIWTNPWDANDNEVIEVQLCGGEMCQAMDAIPNLYFWMMHQIWNYISQWPWFKPCCTAGTPIIDRQQATMMNPVWAMNEMVTFYERKVWAANAQYFFYDISRKCIDRLDRFQWSPMMLPYNYTIMNMLALPGRENFLAKISQMVWMKIGPAYMFKEHSTFVESFLIAEWVLD";
        String right = "CYISPPDSCQNSIDMFWKSIWVANFVFGDHAHGNHWNFDGENNNKQGHRIACPTRIISHDPPSEALACWLPSHHIHCERIIMRKEGVDWQQQVEFNRHCWDHVADTHRGDCTCHEWQLRGPMIVHIFLSNILKDIMLASWALLALGIRNDVQCSQPDDHLPSTGAHTCCFPVKCLSWWSGNNYQFADFLMWMRLNNPTAKSYEWIGLHNELQQHKIWFLKDSHWMWTSRCHQGFIPFCTENKTDARRVKLYWICHRDEFLTINPELGDTAENQSRIHLRLDLTSLQSYMSPIAWHRASESKDPCNTSMTSVTWALPYFINDSASTNREVEWRPACKTTIRNDTCHEWLVFCGPTVQHMVLVLACTHPGSTTNINHEDKSRGKRVIAHIYVRLTEHVNYCNQQLDFRCVPSKWTLISLFMKGHVHAIYMLIILKDWSKDGHRRGHAPSIQQQCGNCLDNLIYYWRYTAGYKMADNPGKTYMYTDMMSRVGPIIYRHCRCQTYNNMNRIHPHHAQCIVRDKWRGSVKISCEQFCFQGSWNVLLQRPNFRSYCYWSIELSMGGQEANWLRAMWSCLHVHKCTVTSEYCVSWQMFLVARVESPCTKEVMQPVSEMTQPRRQKAYGFCDIDLEIWAKSEWTHAKWSAHFWCSRFMAKMMREFFYGVIRINNAETCDNYSAYKWSFSAINRYMMVGHDEKKGNNVYWGLTEKTYIIWGNVIEVQVAGEIEQAMDAIPNLYFWWNYIGWWPWFKPCCTDGTTMKIIDRQQATMITFYERHVWAAEAQYAFYTVVIDRKCIDRLDRFQWSPMMVWLPSNMNMLALPSQMVWMKIGPAYWKADTIFKEHSTFNESDPVESFWIAEWVLD";
        ScoringMatrix scoringMatrix = ScoringMatrix.load("com/github/pmateusz/bioinformatics/comparing/blosum62.txt");

        LongestCommonSequenceBackTrack.Result result = LongestCommonSequenceBackTrack.compare(left, right, scoringMatrix, INDEL_PENALTY);

        System.out.println(result.getScore());
        System.out.println(result.getLeft());
        System.out.println(result.getRight());
    }
}
